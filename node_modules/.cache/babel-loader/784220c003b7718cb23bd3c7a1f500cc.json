{"ast":null,"code":"var _jsxFileName = \"/home/cal/cv-project/src/components/cv-preview/PreviewPersonal-info.js\";\nimport React from \"react\";\nimport index from \"../css/index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Preview = _ref => {\n  let {\n    personal,\n    handleEditing,\n    setNameUpdate,\n    setEmailUpdate,\n    setPhoneUpdate,\n    handleUpdate,\n    editing\n  } = _ref;\n  let viewMode = {};\n  let editMode = {};\n\n  if (editing) {\n    viewMode.display = \"none\";\n  } else {\n    editMode.display = \"none\";\n  }\n\n  const personalName = personal.map(personalType => {\n    var _personalType$name, _personalType$email, _personalType$phone;\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"preview-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-info\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Name:\", personalType.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleEditing,\n            style: viewMode,\n            children: \"Edit Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: index.textInput,\n            style: editMode,\n            value: (_personalType$name = personalType.name) !== null && _personalType$name !== void 0 ? _personalType$name : \"\",\n            onChange: e => setNameUpdate(e.target.value, personalType.id),\n            onKeyDown: handleUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-info\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Email:\", personalType.email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleEditing,\n            style: viewMode,\n            children: \"Edit Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: index.textInput,\n            style: editMode,\n            value: (_personalType$email = personalType.email) !== null && _personalType$email !== void 0 ? _personalType$email : \"\",\n            onChange: e => setEmailUpdate(e.target.value, personalType.id),\n            onKeyDown: handleUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-info\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Phone:\", personalType.phone]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleEditing,\n            style: viewMode,\n            children: \"Edit Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: index.textInput,\n            style: editMode,\n            value: (_personalType$phone = personalType.phone) !== null && _personalType$phone !== void 0 ? _personalType$phone : \"\",\n            onChange: e => setPhoneUpdate(e.target.value, personalType.id),\n            onKeyDown: handleUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this)\n    }, personalType.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: personalName\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Preview;\nexport default Preview;\n\nvar _c;\n\n$RefreshReg$(_c, \"Preview\");","map":{"version":3,"names":["React","index","Preview","personal","handleEditing","setNameUpdate","setEmailUpdate","setPhoneUpdate","handleUpdate","editing","viewMode","editMode","display","personalName","map","personalType","name","textInput","e","target","value","id","email","phone"],"sources":["/home/cal/cv-project/src/components/cv-preview/PreviewPersonal-info.js"],"sourcesContent":["import React from \"react\";\nimport index from \"../css/index.css\";\n\nconst Preview = ({ personal, handleEditing, setNameUpdate, setEmailUpdate, setPhoneUpdate, handleUpdate, editing }) => {\n\n    let viewMode = {};\n    let editMode = {};\n\n    if (editing) {\n        viewMode.display = \"none\";\n    } else {\n        editMode.display = \"none\";\n    }\n\n    const personalName = personal.map((personalType) =>\n        <div key={personalType.id}>\n            <div className=\"preview-info\">\n                <div>\n                    <p className=\"text-info\">\n                        <label>Name:\n                            {personalType.name}\n                        </label>\n                    </p>\n                    <button type=\"button\" onClick={handleEditing} style={viewMode}>Edit Task</button>\n                    <input type=\"text\" className={index.textInput} style={editMode} value={personalType.name ?? \"\"} onChange={(e) => setNameUpdate(e.target.value, personalType.id)} onKeyDown={handleUpdate}></input>\n                </div>\n                <div>\n                    <p className=\"text-info\">\n                        <label>Email:\n                            {personalType.email}\n                        </label>\n                    </p>\n                    <button type=\"button\" onClick={handleEditing} style={viewMode}>Edit Task</button>\n                    <input type=\"text\" className={index.textInput} style={editMode} value={personalType.email ?? \"\"} onChange={(e) => setEmailUpdate(e.target.value, personalType.id)} onKeyDown={handleUpdate}></input>\n                </div>\n                <div>\n                    <p className=\"text-info\">\n                        <label>Phone:\n                            {personalType.phone}\n                        </label>\n                    </p>\n                    <button type=\"button\" onClick={handleEditing} style={viewMode}>Edit Task</button>\n                    <input type=\"text\" className={index.textInput} style={editMode} value={personalType.phone ?? \"\"} onChange={(e) => setPhoneUpdate(e.target.value, personalType.id)} onKeyDown={handleUpdate}></input>\n                </div>\n            </div>\n        </div>\n    );\n\n\n    return (\n        <div>{personalName}</div>\n    );\n}\n\nexport default Preview;"],"mappings":"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"},"metadata":{},"sourceType":"module"}