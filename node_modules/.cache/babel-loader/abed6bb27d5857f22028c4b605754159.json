{"ast":null,"code":"var _jsxFileName = \"/home/cal/cv-project/src/components/cv-preview/PreviewPersonal-info.js\";\nimport React from \"react\";\nimport index from \"../css/index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Preview = _ref => {\n  let {\n    personal,\n    editing,\n    setEditing\n  } = _ref;\n  let viewMode = {};\n  let editMode = {};\n\n  if (editing) {\n    viewMode.display = \"none\";\n  } else {\n    editMode.display = \"none\";\n  }\n\n  const personalName = personal.map(personalType => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preview-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-info\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Name:\", personalType.name, /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: index.textInput,\n              style: editMode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-info\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Email:\", personalType.email, /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: index.textInput,\n              style: editMode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-info\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Phone:\", personalType.phone, /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: index.textInput,\n              style: editMode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, personalType.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [personalName, /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => setEditing(true),\n      style: viewMode,\n      children: \"Edit Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Preview;\nexport default Preview;\n\nvar _c;\n\n$RefreshReg$(_c, \"Preview\");","map":{"version":3,"names":["React","index","Preview","personal","editing","setEditing","viewMode","editMode","display","personalName","map","personalType","name","textInput","email","phone","id"],"sources":["/home/cal/cv-project/src/components/cv-preview/PreviewPersonal-info.js"],"sourcesContent":["import React from \"react\";\nimport index from \"../css/index.css\";\n\nconst Preview = ({ personal, editing, setEditing }) => {\n\n    let viewMode = {};\n    let editMode = {};\n\n    if (editing) {\n        viewMode.display = \"none\";\n    } else {\n        editMode.display = \"none\";\n    }\n\n    const personalName = personal.map((personalType) =>\n        <div key={personalType.id}>\n            <div className=\"preview-info\">\n                <div>\n                    <p className=\"text-info\">\n                        <label>Name:\n                            {personalType.name}\n                            <input type=\"text\" className={index.textInput} style={editMode}></input>\n                        </label>\n                    </p>\n                </div>\n                <div>\n                    <p className=\"text-info\">\n                        <label>Email:\n                            {personalType.email}\n                            <input type=\"text\" className={index.textInput} style={editMode}></input>\n                        </label>\n                    </p>\n                </div>\n                <div>\n                    <p className=\"text-info\">\n                        <label>Phone:\n                            {personalType.phone}\n                            <input type=\"text\" className={index.textInput} style={editMode}></input>\n                        </label>\n                    </p>\n                </div>\n            </div>\n        </div>\n    );\n\n\n    return (\n        <div>{personalName}\n            <button type=\"button\" onClick={()=>setEditing(true)} style={viewMode}>Edit Task</button>\n        </div>\n    );\n}\n\nexport default Preview;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;;;AAEA,MAAMC,OAAO,GAAG,QAAuC;EAAA,IAAtC;IAAEC,QAAF;IAAYC,OAAZ;IAAqBC;EAArB,CAAsC;EAEnD,IAAIC,QAAQ,GAAG,EAAf;EACA,IAAIC,QAAQ,GAAG,EAAf;;EAEA,IAAIH,OAAJ,EAAa;IACTE,QAAQ,CAACE,OAAT,GAAmB,MAAnB;EACH,CAFD,MAEO;IACHD,QAAQ,CAACC,OAAT,GAAmB,MAAnB;EACH;;EAED,MAAMC,YAAY,GAAGN,QAAQ,CAACO,GAAT,CAAcC,YAAD,iBAC9B;IAAA,uBACI;MAAK,SAAS,EAAC,cAAf;MAAA,wBACI;QAAA,uBACI;UAAG,SAAS,EAAC,WAAb;UAAA,uBACI;YAAA,oBACKA,YAAY,CAACC,IADlB,eAEI;cAAO,IAAI,EAAC,MAAZ;cAAmB,SAAS,EAAEX,KAAK,CAACY,SAApC;cAA+C,KAAK,EAAEN;YAAtD;cAAA;cAAA;cAAA;YAAA,QAFJ;UAAA;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QADJ,eASI;QAAA,uBACI;UAAG,SAAS,EAAC,WAAb;UAAA,uBACI;YAAA,qBACKI,YAAY,CAACG,KADlB,eAEI;cAAO,IAAI,EAAC,MAAZ;cAAmB,SAAS,EAAEb,KAAK,CAACY,SAApC;cAA+C,KAAK,EAAEN;YAAtD;cAAA;cAAA;cAAA;YAAA,QAFJ;UAAA;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QATJ,eAiBI;QAAA,uBACI;UAAG,SAAS,EAAC,WAAb;UAAA,uBACI;YAAA,qBACKI,YAAY,CAACI,KADlB,eAEI;cAAO,IAAI,EAAC,MAAZ;cAAmB,SAAS,EAAEd,KAAK,CAACY,SAApC;cAA+C,KAAK,EAAEN;YAAtD;cAAA;cAAA;cAAA;YAAA,QAFJ;UAAA;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QAjBJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ,GAAUI,YAAY,CAACK,EAAvB;IAAA;IAAA;IAAA;EAAA,QADiB,CAArB;EAgCA,oBACI;IAAA,WAAMP,YAAN,eACI;MAAQ,IAAI,EAAC,QAAb;MAAsB,OAAO,EAAE,MAAIJ,UAAU,CAAC,IAAD,CAA7C;MAAqD,KAAK,EAAEC,QAA5D;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH,CAhDD;;KAAMJ,O;AAkDN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}