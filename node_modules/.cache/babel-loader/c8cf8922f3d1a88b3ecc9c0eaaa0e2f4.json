{"ast":null,"code":"var _jsxFileName = \"/home/cal/cv-project/src/components/cv-preview/PreviewPersonal-info.js\";\nimport React from \"react\";\nimport index from \"../css/index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Preview = _ref => {\n  let {\n    personal,\n    handleEditing,\n    setUpdate,\n    handleUpdate,\n    editing\n  } = _ref;\n  let viewMode = {};\n  let editMode = {};\n\n  if (editing) {\n    viewMode.display = \"none\";\n  } else {\n    editMode.display = \"none\";\n  }\n\n  const personalName = personal.map(personalType => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preview-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-info\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Name:\", personalType.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleEditing,\n          style: viewMode,\n          children: \"Edit Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: index.textInput,\n          style: editMode,\n          value: personalType.name,\n          onChange: e => setUpdate(e.target.value, personalType.id),\n          onKeyDown: handleUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-info\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Email:\", personalType.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleEditing,\n          style: viewMode,\n          children: \"Edit Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: index.textInput,\n          style: editMode,\n          value: personalType.email,\n          onChange: e => setUpdate(e.target.value, personalType.id),\n          onKeyDown: handleUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-info\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Phone:\", personalType.phone]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleEditing,\n          style: viewMode,\n          children: \"Edit Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: index.textInput,\n          style: editMode,\n          value: personalType.phone,\n          onChange: e => setUpdate(e.target.value, personalType.id),\n          onKeyDown: handleUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, personalType.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: personalName\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Preview;\nexport default Preview;\n\nvar _c;\n\n$RefreshReg$(_c, \"Preview\");","map":{"version":3,"names":["React","index","Preview","personal","handleEditing","setUpdate","handleUpdate","editing","viewMode","editMode","display","personalName","map","personalType","name","textInput","e","target","value","id","email","phone"],"sources":["/home/cal/cv-project/src/components/cv-preview/PreviewPersonal-info.js"],"sourcesContent":["import React from \"react\";\nimport index from \"../css/index.css\";\n\nconst Preview = ({ personal, handleEditing, setUpdate, handleUpdate, editing }) => {\n\n    let viewMode = {};\n    let editMode = {};\n\n    if (editing) {\n        viewMode.display = \"none\";\n    } else {\n        editMode.display = \"none\";\n    }\n\n    const personalName = personal.map((personalType) =>\n        <div key={personalType.id}>\n            <div className=\"preview-info\">\n                <div>\n                    <p className=\"text-info\">\n                        <label>Name:\n                            {personalType.name}\n                        </label>\n                    </p>\n                    <button type=\"button\" onClick={handleEditing} style={viewMode}>Edit Task</button>\n                    <input type=\"text\" className={index.textInput} style={editMode} value={personalType.name} onChange={(e) => setUpdate(e.target.value, personalType.id)} onKeyDown={handleUpdate}></input>\n                </div>\n                <div>\n                    <p className=\"text-info\">\n                        <label>Email:\n                            {personalType.email}\n                        </label>\n                    </p>\n                    <button type=\"button\" onClick={handleEditing} style={viewMode}>Edit Task</button>\n                    <input type=\"text\" className={index.textInput} style={editMode} value={personalType.email} onChange={(e) => setUpdate(e.target.value, personalType.id)} onKeyDown={handleUpdate}></input>\n                </div>\n                <div>\n                    <p className=\"text-info\">\n                        <label>Phone:\n                            {personalType.phone}\n                        </label>\n                    </p>\n                    <button type=\"button\" onClick={handleEditing} style={viewMode}>Edit Task</button>\n                    <input type=\"text\" className={index.textInput} style={editMode} value={personalType.phone} onChange={(e) => setUpdate(e.target.value, personalType.id)} onKeyDown={handleUpdate}></input>\n                </div>\n            </div>\n        </div>\n    );\n\n\n    return (\n        <div>{personalName}</div>\n    );\n}\n\nexport default Preview;"],"mappings":"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"},"metadata":{},"sourceType":"module"}