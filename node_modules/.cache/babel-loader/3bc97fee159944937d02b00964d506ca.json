{"ast":null,"code":"var _jsxFileName = \"/home/cal/cv-project/src/components/cv-preview/PreviewPersonal-info.js\";\nimport React from \"react\";\nimport index from \"../css/index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Preview = _ref => {\n  let {\n    personal,\n    editing,\n    setEditing,\n    setPersonalInfo\n  } = _ref;\n  let viewMode = {};\n  let editMode = {};\n\n  if (editing) {\n    viewMode.display = \"none\";\n  } else {\n    editMode.display = \"none\";\n  }\n\n  return personal.map(personalType => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preview-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }, this), personalType.name, /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: index.textInput,\n          name: \"name\",\n          style: editMode,\n          value: personalType.name,\n          onChange: e => setPersonalInfo({ ...personal,\n            name: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this), personalType.email, /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: index.textInput,\n          name: \"name\",\n          style: editMode,\n          value: personalType.email,\n          onChange: e => setPersonalInfo({ ...personal,\n            email: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Phone:  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this), personalType.phone, /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: index.textInput,\n          name: \"name\",\n          style: editMode,\n          value: personalType.phone,\n          onChange: e => setPersonalInfo({ ...personal,\n            phone: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this), editing ? /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => setEditing(false),\n      children: \"Click to Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => setEditing(true),\n      children: \"Click to Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }, this)]\n  }, personalType.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 13\n  }, this));\n};\n\n_c = Preview;\nexport default Preview;\n\nvar _c;\n\n$RefreshReg$(_c, \"Preview\");","map":{"version":3,"names":["React","index","Preview","personal","editing","setEditing","setPersonalInfo","viewMode","editMode","display","map","personalType","name","textInput","e","target","value","email","phone","id"],"sources":["/home/cal/cv-project/src/components/cv-preview/PreviewPersonal-info.js"],"sourcesContent":["import React from \"react\";\nimport index from \"../css/index.css\";\n\nconst Preview = ({ personal, editing, setEditing, setPersonalInfo }) => {\n\n    let viewMode = {};\n    let editMode = {};\n\n    if (editing) {\n        viewMode.display = \"none\";\n    } else {\n        editMode.display = \"none\";\n    }\n\n\n    return (\n        personal.map((personalType) =>\n            <div key={personalType.id}>\n                <div className=\"preview-info\">\n                    <div className=\"text-info\">\n                        <label>Name: </label>\n                        {personalType.name}\n                            <input type=\"text\" className={index.textInput} name=\"name\" style={editMode} value={personalType.name} onChange={e => setPersonalInfo({\n                                ...personal,\n                                name: e.target.value\n                            })}/>\n                    </div>\n                    <div className=\"text-info\">\n                        <label>Email: </label>\n                        {personalType.email}\n                    \n                            <input type=\"text\" className={index.textInput} name=\"name\" style={editMode} value={personalType.email} onChange={e => setPersonalInfo({\n                                ...personal,\n                                email: e.target.value\n                            })}></input>\n                    </div>\n                    <div className=\"text-info\">\n                        <label>Phone:  </label>\n                        {personalType.phone}\n                            <input type=\"text\" className={index.textInput} name=\"name\" style={editMode} value={personalType.phone} onChange={e => setPersonalInfo({\n                                ...personal,\n                                phone: e.target.value\n                            })}></input>\n                    </div>\n                </div>\n                {editing ? (\n                        <button type=\"button\" onClick={() => setEditing(false)}>Click to Save</button>\n                    ) : (\n                        <button type=\"button\" onClick={() => setEditing(true)}>Click to Edit</button>\n                    )}\n            </div>\n        )\n    )\n}\n\nexport default Preview;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;;;AAEA,MAAMC,OAAO,GAAG,QAAwD;EAAA,IAAvD;IAAEC,QAAF;IAAYC,OAAZ;IAAqBC,UAArB;IAAiCC;EAAjC,CAAuD;EAEpE,IAAIC,QAAQ,GAAG,EAAf;EACA,IAAIC,QAAQ,GAAG,EAAf;;EAEA,IAAIJ,OAAJ,EAAa;IACTG,QAAQ,CAACE,OAAT,GAAmB,MAAnB;EACH,CAFD,MAEO;IACHD,QAAQ,CAACC,OAAT,GAAmB,MAAnB;EACH;;EAGD,OACIN,QAAQ,CAACO,GAAT,CAAcC,YAAD,iBACT;IAAA,wBACI;MAAK,SAAS,EAAC,cAAf;MAAA,wBACI;QAAK,SAAS,EAAC,WAAf;QAAA,wBACI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,EAEKA,YAAY,CAACC,IAFlB,eAGQ;UAAO,IAAI,EAAC,MAAZ;UAAmB,SAAS,EAAEX,KAAK,CAACY,SAApC;UAA+C,IAAI,EAAC,MAApD;UAA2D,KAAK,EAAEL,QAAlE;UAA4E,KAAK,EAAEG,YAAY,CAACC,IAAhG;UAAsG,QAAQ,EAAEE,CAAC,IAAIR,eAAe,CAAC,EACjI,GAAGH,QAD8H;YAEjIS,IAAI,EAAEE,CAAC,CAACC,MAAF,CAASC;UAFkH,CAAD;QAApI;UAAA;UAAA;UAAA;QAAA,QAHR;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eASI;QAAK,SAAS,EAAC,WAAf;QAAA,wBACI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,EAEKL,YAAY,CAACM,KAFlB,eAIQ;UAAO,IAAI,EAAC,MAAZ;UAAmB,SAAS,EAAEhB,KAAK,CAACY,SAApC;UAA+C,IAAI,EAAC,MAApD;UAA2D,KAAK,EAAEL,QAAlE;UAA4E,KAAK,EAAEG,YAAY,CAACM,KAAhG;UAAuG,QAAQ,EAAEH,CAAC,IAAIR,eAAe,CAAC,EAClI,GAAGH,QAD+H;YAElIc,KAAK,EAAEH,CAAC,CAACC,MAAF,CAASC;UAFkH,CAAD;QAArI;UAAA;UAAA;UAAA;QAAA,QAJR;MAAA;QAAA;QAAA;QAAA;MAAA,QATJ,eAkBI;QAAK,SAAS,EAAC,WAAf;QAAA,wBACI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,EAEKL,YAAY,CAACO,KAFlB,eAGQ;UAAO,IAAI,EAAC,MAAZ;UAAmB,SAAS,EAAEjB,KAAK,CAACY,SAApC;UAA+C,IAAI,EAAC,MAApD;UAA2D,KAAK,EAAEL,QAAlE;UAA4E,KAAK,EAAEG,YAAY,CAACO,KAAhG;UAAuG,QAAQ,EAAEJ,CAAC,IAAIR,eAAe,CAAC,EAClI,GAAGH,QAD+H;YAElIe,KAAK,EAAEJ,CAAC,CAACC,MAAF,CAASC;UAFkH,CAAD;QAArI;UAAA;UAAA;UAAA;QAAA,QAHR;MAAA;QAAA;QAAA;QAAA;MAAA,QAlBJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,EA4BKZ,OAAO,gBACA;MAAQ,IAAI,EAAC,QAAb;MAAsB,OAAO,EAAE,MAAMC,UAAU,CAAC,KAAD,CAA/C;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADA,gBAGA;MAAQ,IAAI,EAAC,QAAb;MAAsB,OAAO,EAAE,MAAMA,UAAU,CAAC,IAAD,CAA/C;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QA/BZ;EAAA,GAAUM,YAAY,CAACQ,EAAvB;IAAA;IAAA;IAAA;EAAA,QADJ,CADJ;AAsCH,CAlDD;;KAAMjB,O;AAoDN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}