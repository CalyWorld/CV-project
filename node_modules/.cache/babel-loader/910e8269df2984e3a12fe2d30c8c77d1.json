{"ast":null,"code":"var _jsxFileName = \"/home/cal/cv-project/src/components/cv-preview/PreviewPersonal-info.js\";\nimport React from \"react\";\nimport index from \"../css/index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Preview = _ref => {\n  let {\n    personal,\n    editing,\n    setEditing,\n    setPersonalInfo\n  } = _ref;\n  let viewMode = {};\n  let editMode = {};\n\n  if (editing) {\n    viewMode.display = \"none\";\n  } else {\n    editMode.display = \"none\";\n  }\n\n  return personal.map(personalType => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preview-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }, this), personalType.name, editing ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: index.textInput,\n          name: \"name\",\n          style: editMode,\n          value: personalType.name,\n          onChange: e => setPersonalInfo({ ...personal,\n            name: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: personalType.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this), personalType.email, editing ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: index.textInput,\n          name: \"name\",\n          style: editMode,\n          value: personalType.email,\n          onChange: e => setPersonalInfo({ ...personal,\n            email: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: personalType.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Phone:  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this), personalType.phone, editing ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: index.textInput,\n          name: \"name\",\n          style: editMode,\n          value: personalType.phone,\n          onChange: e => setPersonalInfo({ ...personal,\n            phone: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: personalType.phone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), editing ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => setEditing(false),\n        children: \"Click to Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => setEditing(true),\n        children: \"Click to Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this)\n  }, personalType.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 13\n  }, this));\n};\n\n_c = Preview;\nexport default Preview;\n\nvar _c;\n\n$RefreshReg$(_c, \"Preview\");","map":{"version":3,"names":["React","index","Preview","personal","editing","setEditing","setPersonalInfo","viewMode","editMode","display","map","personalType","name","textInput","e","target","value","email","phone","id"],"sources":["/home/cal/cv-project/src/components/cv-preview/PreviewPersonal-info.js"],"sourcesContent":["import React from \"react\";\nimport index from \"../css/index.css\";\n\nconst Preview = ({ personal, editing, setEditing, setPersonalInfo }) => {\n\n    let viewMode = {};\n    let editMode = {};\n\n    if (editing) {\n        viewMode.display = \"none\";\n    } else {\n        editMode.display = \"none\";\n    }\n\n\n    return (\n        personal.map((personalType) =>\n            <div key={personalType.id}>\n                <div className=\"preview-info\">\n                    <div className=\"text-info\">\n                        <label>Name: </label>\n                        {personalType.name}\n                        {editing ? (\n                            <input type=\"text\" className={index.textInput} name=\"name\" style={editMode} value={personalType.name} onChange={e => setPersonalInfo({\n                                ...personal,\n                                name: e.target.value\n                            })} />\n                        ) : (<span>{personalType.name}</span>\n                        )}\n                    </div>\n                    <div className=\"text-info\">\n                        <label>Email: </label>\n                        {personalType.email}\n                        {editing ? (\n                            <input type=\"text\" className={index.textInput} name=\"name\" style={editMode} value={personalType.email} onChange={e => setPersonalInfo({\n                                ...personal,\n                                email: e.target.value\n                            })}></input>\n                        ) : (\n                            <span>{personalType.email}</span>\n                        )}\n                    </div>\n                    <div className=\"text-info\">\n                        <label>Phone:  </label>\n                        {personalType.phone}\n                        {editing ? (\n                            <input type=\"text\" className={index.textInput} name=\"name\" style={editMode} value={personalType.phone} onChange={e => setPersonalInfo({\n                                ...personal,\n                                phone: e.target.value\n                            })}></input>\n                        ) : (\n                            <span>{personalType.phone}</span>\n                        )}\n                    </div>\n                    {editing ? (\n                        <button type=\"button\" onClick={() => setEditing(false)}>Click to Save</button>\n                    ) : (\n                        <button type=\"button\" onClick={() => setEditing(true)}>Click to Edit</button>\n                    )}\n                </div>\n            </div>\n        )\n    )\n}\n\nexport default Preview;"],"mappings":"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"},"metadata":{},"sourceType":"module"}